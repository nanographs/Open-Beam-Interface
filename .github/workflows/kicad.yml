name: Export KiCad
on:
  workflow_dispatch:
  push:
      paths:
      - '**.sch'
      - '**.kicad_pcb'
      - '.github/workflows/kicad.yml' # Trigger on changes to the workflow file
      - '**.kibot.yml' # Trigger on changes to the KiBot config file used in the workflow
  
jobs:
  export-ecad:
    name: Export ECAD
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: Update system repositories, Install Required Libraries and Initialize git-lfs
      run: |
        apt update
        apt -y install git git-lfs zip librsvg2-bin imagemagick
        git lfs install

    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        lfs: true

    ## Main OBI board
    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Open Beam Interface"
        kibot -c ../../../.github/workflows/kibot/kibot.yml -e "Open Beam Interface.kicad_sch" -b "Open Beam Interface.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Data Interconnect"
        kibot -c ../../../.github/workflows/kibot/kibot.yml -e "OBI Data Interconnect.kicad_sch" -b "OBI Data Interconnect.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Digital IO Breakout/revA1/Digital IO Breakout"
        kibot -c ../../../../../.github/workflows/kibot/kibot.yml -e "Digital IO Breakout.kicad_sch" -b "Digital IO Breakout.kicad_pcb"

    ## Interface selectors and drivers
    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Interface selectors and drivers/Beam Offset Switch"
        kibot -c ../../../../.github/workflows/kibot/kibot.yml -e "Beam Offset Switch.kicad_sch" -b "Beam Offset Switch.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Interface selectors and drivers/DB9 Differential Signal Selector"
        kibot -c ../../../../.github/workflows/kibot/kibot.yml -e "DB9 Differential Signal Selector.kicad_sch" -b "DB9 Differential Signal Selector.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Interface selectors and drivers/DB9 High-Low Signal Generator"
        kibot -c ../../../../.github/workflows/kibot/kibot.yml -e "DB9 High-Low Signal Generator.kicad_sch" -b "DB9 High-Low Signal Generator.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Interface selectors and drivers/DSC DB9 Splitter"
        kibot -c ../../../../.github/workflows/kibot/kibot.yml -e "DSC DB9 Splitter.kicad_sch" -b "DSC DB9 Splitter.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Interface selectors and drivers/DSC Scan Selector"
        kibot -c ../../../../.github/workflows/kibot/kibot.yml -e "DSC Scan Selector.kicad_sch" -b "DSC Scan Selector.kicad_pcb"

    - name: Generate Export Files
      run: |
        cd "Hardware/PCBs/Interface selectors and drivers/Generic Scan Selector"
        kibot -c ../../../../.github/workflows/kibot/kibot.yml -e "Generic Scan Selector.kicad_sch" -b "Generic Scan Selector.kicad_pcb"

    - name: Make changes to pull request
      run: date +%s > report.txt

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        commit-message: Update report
        committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
        author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: example-patches
        delete-branch: true
        title: '[Example] Update report'
        body: |
          Update report
          - Updated with *today's* date
          - Auto-generated by [create-pull-request][1]

          [1]: https://github.com/peter-evans/create-pull-request
        labels: |
          report
          automated pr


    # - name: Commit Files
    #   uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
    #   with:
    #     # The arguments for the `git add` command (see the paragraph below for more info)
    #     # Default: '.'
    #     add: .
    
    #     # The name of the user that will be displayed as the author of the commit.
    #     # Default: depends on the default_author input
    #     author_name: Isabel Burgos
    
    #     # The email of the user that will be displayed as the author of the commit.
    #     # Default: depends on the default_author input
    #     author_email: isabel@nanographs.io
    
    #     # Additional arguments for the git commit command. The --message argument is already set by the message input.
    #     # Default: ''
    #     # commit: --signoff
    
    #     # The name of the custom committer you want to use, if different from the author of the commit.
    #     # Default: the name of the author (set with either author_name or default_author)
    #     committer_name: nano-kibot
    
    #     # The email of the custom committer you want to use, if different from the author of the commit.
    #     # Default: the email of the author (set with either author_email or default_author)
    #     committer_email: isabel@nanographs.io
    
    #     # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
    #     # Default: '.'
    #     # cwd: './path/to/the/repo'
    
    #     # Determines the way the action fills missing author name and email. Three options are available:
    #     # - github_actor -> UserName <UserName@users.noreply.github.com>
    #     # - user_info -> Your Display Name <your-actual@email.com>
    #     # - github_actions -> github-actions <email associated with the github logo>
    #     # Default: github_actor
    #     default_author: github_actor
    
    #     # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
    #     # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ. 
    #     # Default: --tags --force
    #     fetch: false
    
    #     # The message for the commit.
    #     # Default: 'Commit from GitHub Actions (name of the workflow)'
    #     message: 'Automatically committed by workflows/kicad.yml'
    
    #     # If this input is set, the action will push the commit to a new branch with this name.
    #     # Default: ''
    #     # new_branch: custom-new-branch
    
    #     # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
    #     # - ignore -> errors will be logged but the step won't fail
    #     # - exitImmediately -> the action will stop right away, and the step will fail
    #     # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
    #     # Default: ignore
    #     pathspec_error_handling: exitAtEnd
    
    #     # Arguments for the git pull command. By default, the action does not pull.
    #     # Default: ''
    #     # pull: '--rebase --autostash ...'
    
    #     # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
    #     # Default: true
    #     push: true
    
    #     # The arguments for the `git rm` command (see the paragraph below for more info)
    #     # Default: ''
    #     # remove: './dir/old_file.js'
    
    #     # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
    #     # Default: ''
    #     # tag: 'v1.0.0 --force'
    
    #     # Arguments for the git push --tags command (any additional argument will be added after --tags)
    #     # Default: ''
    #     # tag_push: '--force'
        